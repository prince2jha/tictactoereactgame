{"version":3,"sources":["logo.svg","components/icon.js","App.js","reportWebVitals.js","index.js"],"names":["Icon","choice","className","tiktacArray","Array","fill","App","useState","isCross","setIsCross","winMessage","setWinMessage","changeItem","index","toast","type","Container","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Row","Col","md","onClick","map","value","Card","CardBody","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa39d425.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { FaTimes,FaRegCircle} from \"react-icons/fa\";\r\nimport './icon.css';\r\n\r\nconst Icon=({choice})=> {\r\n    switch(choice){\r\n        case \"cross\":\r\n            return <FaTimes className=\"icons\"/>;\r\n        case \"circle\":\r\n            return <FaRegCircle className=\"icons\"/>;\r\n        default:\r\n            return '';\r\n    }\r\n}\r\n\r\nexport default Icon\r\n","import logo from './logo.svg';\n\nimport Icon from './components/icon';\n\n//import treact-toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n//import reactstrap and bootstrap\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Button,Container,CardBody, Card,Col,Row } from 'reactstrap';\nimport './App.css';\nimport { useState } from 'react';\n\nconst tiktacArray = new Array(9).fill(\"\");\n// let index;\nfunction App() {\n  let [isCross,setIsCross] = useState(true);\n  let [winMessage, setWinMessage] = useState('');\n  \n  // let [draw, setIsDraw] = useState(false);\n  const playAgain  = () =>{\n    setIsCross(true);\n    setWinMessage('');\n    tiktacArray.fill('');\n  }\n  const findWinner=()=>{\n    // let winnerArray = [\n    //   [0,1,2],\n    //   [3,4,5],\n    //   [6,7,8],\n    //   [0,3,6],\n    //   [1,4,7],\n    //   [2,5,8],\n    //   [0,4,8],\n    //   [2,4,6]\n    // ];\n    if(!tiktacArray[0]||!tiktacArray[1]||!tiktacArray[2]||!tiktacArray[3]||!tiktacArray[4]||!tiktacArray[5]||!tiktacArray[6]||!tiktacArray[7]||!tiktacArray[8]){\n      if(tiktacArray[0]===tiktacArray[1] && tiktacArray[0]===tiktacArray[2] && tiktacArray[0]){\n        setWinMessage(tiktacArray[0]+\" has won!\");\n      }\n      else if(tiktacArray[3]===tiktacArray[4] && tiktacArray[3]===tiktacArray[5] && tiktacArray[3]){\n        setWinMessage(tiktacArray[3]+\" has won!\");\n      }\n      else if(tiktacArray[6]===tiktacArray[7] && tiktacArray[6]===tiktacArray[8] && tiktacArray[6]){\n        setWinMessage(tiktacArray[6]+\" has won!\");\n      }\n      else if(tiktacArray[0]===tiktacArray[3] && tiktacArray[0]===tiktacArray[6] && tiktacArray[0]){\n        setWinMessage(tiktacArray[0]+\" has won!\");\n      }\n      else if(tiktacArray[1]===tiktacArray[4] && tiktacArray[1]===tiktacArray[7] && tiktacArray[1]){\n        setWinMessage(tiktacArray[1]+\" has won!\");\n      }\n      else if(tiktacArray[2]===tiktacArray[5] && tiktacArray[2]===tiktacArray[8] && tiktacArray[2]){\n        setWinMessage(tiktacArray[2]+\" has won!\");\n      }\n      else if(tiktacArray[0]===tiktacArray[4] && tiktacArray[0]===tiktacArray[8] && tiktacArray[0]){\n        setWinMessage(tiktacArray[0]+\" has won!\");\n      }\n      else if(tiktacArray[2]===tiktacArray[4] && tiktacArray[2]===tiktacArray[6] && tiktacArray[2]){\n        setWinMessage(tiktacArray[2]+\" has won!\");\n      }\n    }else{\n      if(tiktacArray[0]===tiktacArray[1] && tiktacArray[0]===tiktacArray[2] && tiktacArray[0]){\n        setWinMessage(tiktacArray[0]+\" has won!\");\n      }\n      else if(tiktacArray[3]===tiktacArray[4] && tiktacArray[3]===tiktacArray[5] && tiktacArray[3]){\n        setWinMessage(tiktacArray[3]+\" has won!\");\n      }\n      else if(tiktacArray[6]===tiktacArray[7] && tiktacArray[6]===tiktacArray[8] && tiktacArray[6]){\n        setWinMessage(tiktacArray[6]+\" has won!\");\n      }\n      else if(tiktacArray[0]===tiktacArray[3] && tiktacArray[0]===tiktacArray[6] && tiktacArray[0]){\n        setWinMessage(tiktacArray[0]+\" has won!\");\n      }\n      else if(tiktacArray[1]===tiktacArray[4] && tiktacArray[1]===tiktacArray[7] && tiktacArray[1]){\n        setWinMessage(tiktacArray[1]+\" has won!\");\n      }\n      else if(tiktacArray[2]===tiktacArray[5] && tiktacArray[2]===tiktacArray[8] && tiktacArray[2]){\n        setWinMessage(tiktacArray[2]+\" has won!\");\n      }\n      else if(tiktacArray[0]===tiktacArray[4] && tiktacArray[0]===tiktacArray[8] && tiktacArray[0]){\n        setWinMessage(tiktacArray[0]+\" has won!\");\n      }\n      else if(tiktacArray[2]===tiktacArray[4] && tiktacArray[2]===tiktacArray[6] && tiktacArray[2]){\n        setWinMessage(tiktacArray[2]+\" has won!\");\n      }\n      else{\n        setWinMessage(\" Draw!\");\n      }\n      \n    }\n  }\n  const changeItem=(index)=>{\n    if(winMessage){\n      return toast('Khatam! Taa ta byee bye! ',{type:\"warning\"});\n    }\n    if(tiktacArray[index]===''){\n      tiktacArray[index] = isCross?\"cross\":\"circle\";\n      setIsCross(!isCross);\n    }\n    else{\n      return toast('Already filled!',{type:\"error\"});\n    }\n    findWinner();\n    // isDraw();\n  }\n  return (\n    <Container className=\"p-5\">\n    <ToastContainer\n      position=\"bottom-center\"\n      autoClose={2000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n      ></ToastContainer>\n      <Row>\n        <Col md={6} className=\"offset-md-3\">\n          {\n            //to display the winner message\n            winMessage?(\n              <div>\n                <h1  className=\"text-center\">{winMessage}</h1>\n                <button onClick={playAgain}>Play Again</button>\n              </div>\n              \n            ):(\n              <h1>\n                {isCross? \"Cross's Turn\": \"Circle's Turn\"}\n              </h1>\n            )\n          }\n          <div className=\"grid\">\n            {tiktacArray.map((value,index)=>(\n              <Card onClick={()=>changeItem(index)}>\n                <CardBody className=\"box\">\n                  <Icon choice={tiktacArray[index]}/>\n                </CardBody>\n              </Card>\n            ))\n            }\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}